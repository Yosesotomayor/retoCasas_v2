FROM python:3.12-slim

# Libs nativas
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       libgomp1 \
       libgfortran5 \
    && rm -rf /var/lib/apt/lists/*

# uv binario
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# ---- Instalar dependencias con uv ----
# OJO: tu pyproject.toml está en la RAÍZ del repo (no en /server)
WORKDIR /app
COPY pyproject.toml ./
# Si tienes uv.lock, cópialo también; si no, el RUN lo genera
# COPY uv.lock ./

ENV XDG_CACHE_HOME=/tmp/.cache \
    UV_CACHE_DIR=/tmp/.cache/uv \
    UV_LINK_MODE=copy \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    PATH="/app/.venv/bin:${PATH}"

# Si hay lock, usa --frozen; si no, créalo y sincroniza
RUN if [ -f uv.lock ]; then \
      uv sync --frozen --no-dev ; \
    else \
      uv lock && uv sync --no-dev ; \
    fi

# ---- Copiar el código después para aprovechar cache ----
COPY . .
WORKDIR /app/server

EXPOSE 8000

# Arranque usando el python del .venv (gracias al PATH de arriba)
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]