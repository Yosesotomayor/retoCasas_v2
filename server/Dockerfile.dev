FROM python:3.12-slim

# Libs nativas necesarias
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    libgomp1 libgfortran5 \
 && rm -rf /var/lib/apt/lists/*

# uv binario
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# --- Instalar deps con el pyproject correcto (el de /server) ---
WORKDIR /app

# Copiamos SOLO manifiestos primero (aprovecha cache)
COPY server/pyproject.toml server/
# Si ya tienes lock, descomenta la siguiente línea
# COPY server/uv.lock server/

# Config para uv y para usar SIEMPRE el venv de uv
ENV XDG_CACHE_HOME=/tmp/.cache \
    UV_CACHE_DIR=/tmp/.cache/uv \
    UV_LINK_MODE=copy \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    PATH="/app/server/.venv/bin:${PATH}" 
ENV PATH="/app/server/.venv/bin:$PATH"

# Genera/usa lock e instala SIN dev
RUN cd server && \
    if [ -f uv.lock ]; then uv sync --frozen --no-dev; \
    else uv lock && uv sync --no-dev; fi

# --- Copiamos el código después (no toca el .venv) ---
COPY . /app

# Puerto
EXPOSE 8000

WORKDIR /app/server
ENTRYPOINT ["/app/server/.venv/bin/python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]