# syntax=docker/dockerfile:1.7
FROM python:3.12-slim

# Dependencias nativas (ajusta según tus libs)
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    libgomp1 libgfortran5 ca-certificates \
 && rm -rf /var/lib/apt/lists/*

# uv binario
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Trabajamos dentro de /app
WORKDIR /app

# Copiamos sólo los manifiestos para cache de deps
COPY server/pyproject.toml server/pyproject.toml
# Asegúrate de tener el lockfile generado con: (en tu máquina) `cd server && uv lock`
COPY server/uv.lock server/uv.lock

# Variables para uv y venv
ENV XDG_CACHE_HOME=/tmp/.cache \
    UV_CACHE_DIR=/tmp/.cache/uv \
    UV_LINK_MODE=copy \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    UV_PROJECT="/app/server" \
    PATH="/app/server/.venv/bin:${PATH}"

# Instala dependencias exactamente como en el lockfile (sin dev)
RUN uv sync --frozen --no-dev

# Ahora sí copiamos el resto del código (no invalida la capa de deps)
COPY . /app

EXPOSE 8000
WORKDIR /app/server

# Puedes usar CMD; PATH ya apunta al venv
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]