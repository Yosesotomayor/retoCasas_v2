# syntax=docker/dockerfile:1.7
FROM python:3.12-slim

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

# Dependencias nativas (ajusta según tus libs)
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    libgomp1 libgfortran5 libgcc-s1 ca-certificates \
 && rm -rf /var/lib/apt/lists/*

# Trabajamos dentro de /app
WORKDIR /app

# Enable bytecode compilation and copy mode for Docker
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy

# Copiamos sólo los manifiestos para cache de deps
COPY server/pyproject.toml server/uv.lock ./server/

# Instala dependencias via uv con cache mount
RUN --mount=type=cache,target=/root/.cache/uv \
    cd server && uv sync --frozen --no-install-project

# Ahora sí copiamos el resto del código (no invalida la capa de deps)
COPY . /app

# Install the project
RUN --mount=type=cache,target=/root/.cache/uv \
    cd server && uv sync --frozen

# Set environment variables
ENV PATH="/app/server/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

EXPOSE 8000
WORKDIR /app/server
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]