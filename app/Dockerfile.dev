# ===== Base de dependencias =====
FROM node:22-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci

# ===== Build de producción =====
FROM node:22-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
ENV NEXT_TELEMETRY_DISABLED=1
RUN npm run build   # <-- genera .next/standalone

# ===== Runner de producción =====
FROM node:22-alpine AS prod-runner
WORKDIR /app
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
# Copia assets + salida standalone
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
# Usuario no root
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001
USER nextjs
EXPOSE 3000
ENV HOSTNAME=0.0.0.0 PORT=3000
# En standalone se arranca con node server.js
CMD ["node", "server.js"]

# ===== Runner de desarrollo =====
FROM node:22-alpine AS dev-runner
WORKDIR /app
RUN apk add --no-cache libc6-compat
ENV NEXT_TELEMETRY_DISABLED=1
# En dev SÍ necesitas node_modules y el código
COPY package.json package-lock.json* ./
RUN npm ci
COPY . .
EXPOSE 3000
ENV HOSTNAME=0.0.0.0 PORT=3000
CMD ["npm", "run", "dev"]